{"version":3,"sources":["reportWebVitals.js","components/LoadingComponent.js","shared/baseUrl.js","components/DirectoryComponent.js","components/CampsiteInfoComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/mainComponent.js","redux/campsites.js","redux/comments.js","shared/partners.js","redux/partners.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","className","baseUrl","RenderDirectoryItem","campsite","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Directory","props","directory","campsites","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderCampsite","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","campsiteId","text","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","maxLength","len","val","length","required","CommentForm","state","isModalOpen","feedback","touched","toggleModal","bind","handleSubmit","this","setState","values","rating","Fragment","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","htmlFor","Select","model","Text","placeholder","validators","minLength","show","component","messages","Textarea","rows","type","color","Component","CampsiteInfo","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","preventDefault","Jumbotron","fluid","Navbar","dark","sticky","expand","NavbarBrand","href","height","NavbarToggler","Collapse","navbar","Nav","NavItem","Form","FormGroup","Label","HtmlFor","Input","innerRef","input","Check","check","Footer","role","RenderCard","item","Home","campsitesLoading","campsitesErrMess","promotion","promotionLoading","promotionErrMess","partner","isNumber","isNaN","validEmail","test","Contact","firstName","lastName","phoneNum","email","agree","contactType","console","log","JSON","stringify","resetFeedbackForm","Row","md","Col","size","offset","Checkbox","RenderPartner","partners","Media","object","body","heading","About","tag","CardHeader","title","list","ADD_COMMENT","CAMPSITES_LOADING","CAMPSITES_FAILED","ADD_CAMPSITES","ADD_COMMENTS","COMMENTS_FAILED","PROMOTIONS_LOADING","ADD_PROMOTIONS","PROMOTIONS_FAILED","ActionTypes","campsitesFailed","payload","addCampsites","commentsFailed","addComments","dispatch","newComment","toISOString","fetch","method","headers","response","ok","error","Error","status","statusText","json","catch","message","promotionsLoading","promotionsFailed","addPromotions","promotions","mapDispatchToProps","fetchCampsites","actions","reset","fetchComments","fetchPromotions","Main","classNames","timeout","path","filter","featured","exact","render","match","params","isLaoding","comment","commentsErrMess","location","key","withRouter","connect","Campsites","action","Comments","concat","PARTNERS","Partners","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedbackForm","applyMiddleware","thunk","logger","App","ReactDOM","document","getElementById"],"mappings":"4KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qICJDQ,EAAU,WACnB,OACI,sBAAKC,UAAU,MAAf,UACI,mBAAGA,UAAY,oDACf,+CCPCC,EAAU,yBCQvB,SAASC,EAAT,GAA0C,IAAZC,EAAW,EAAXA,SAC1B,OACI,cAACC,EAAA,EAAD,UAGI,eAAC,IAAD,CAAMC,GAAE,qBAAiBF,EAASG,IAAlC,UAEI,cAACC,EAAA,EAAD,CAASC,MAAM,OAAOC,IAAKR,EAAUE,EAASO,MAAOC,IAAKR,EAASS,OACnE,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UAAYX,EAASS,cA4D1BG,MApDf,SAAmBC,GAEf,IAAMC,EAAYD,EAAME,UAAUA,UAAUC,KAAI,SAAAhB,GAC5C,OACI,qBAAuBH,UAAU,eAAjC,SACI,cAACE,EAAD,CAAqBC,SAAUA,KADzBA,EAASG,OAK7B,OAAGU,EAAME,UAAUE,UAEX,qBAAKpB,UAAY,YAAjB,SACI,qBAAKA,UAAY,MAAjB,SACI,cAAC,EAAD,QAKZgB,EAAME,UAAUG,QAEZ,qBAAKrB,UAAY,YAAjB,SACI,qBAAKA,UAAW,MAAhB,SACI,qBAAKA,UAAY,MAAjB,SACI,6BAAKgB,EAAME,UAAUG,gBAOnC,sBAAKrB,UAAU,YAAf,UACI,qBAAKA,UAAY,MAAjB,SACI,sBAAKA,UAAY,MAAjB,UACA,eAACsB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACG,cAAC,IAAD,CAAMlB,GAAG,QAAT,oBAEF,cAACkB,EAAA,EAAD,CAAgBC,QAAM,EAAtB,0BAIL,2CACC,4BAGL,qBAAKxB,UAAU,MAAf,SACKiB,Q,6EC3DjB,SAASQ,EAAT,GAAoC,IAAXtB,EAAU,EAAVA,SACzB,OACI,qBAAKH,UAAY,cAAjB,SACI,cAAC,gBAAD,CACI0B,IAAE,EACFC,eAAgB,CACZC,cAAe,+BAHvB,SAMQ,eAACxB,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,CAASsB,KAAG,EAACpB,IAAKR,EAAUE,EAASO,MAAOC,IAAOR,EAASS,OAC5D,cAACkB,EAAA,EAAD,UAEI,cAACC,EAAA,EAAD,UAAW5B,EAAS6B,uBAW5C,SAASC,EAAT,GAA2D,IAAlCC,EAAiC,EAAjCA,SAASC,EAAwB,EAAxBA,YAAYC,EAAY,EAAZA,WAC1C,OAAGF,EAEG,sBAAKlC,UAAW,eAAhB,UACC,0CACA,cAAC,UAAD,CAAS0B,IAAE,EAAX,SACCQ,EAASf,KAAI,SAACe,GACZ,OACI,cAAC,OAAD,CAAMR,IAAE,EAAR,SAEE,8BACI,kCAAKQ,EAASG,KAAK,uBAAnB,IAA0B,KACzBH,EAASI,OACT,IAAIC,KAAKC,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAAYC,OAAO,IAAIC,KAAKA,KAAKC,MAAMZ,EAASa,cALjHb,EAAS5B,SAgB9B,cAAC,EAAD,CAAa8B,WAAcA,EAAYD,YAAeA,OAKvD,wBAEX,IAAMa,EAAY,SAAAC,GAAG,OAAI,SAAAC,GAAG,OAAKA,GAAQA,EAAIC,QAAUF,IAEjDG,EAAW,SAAAF,GAAG,OAAIA,GAAOA,EAAIC,QAE7BE,E,kDAEF,WAAYrC,GAAO,IAAD,8BACd,cAAMA,IAEDsC,MAAQ,CACTC,aAAa,EACbjB,OAAQ,GACRD,KAAM,GACNmB,SAAU,GACVC,QAAQ,CACJnB,QAAQ,EACRD,MAAM,IAId,EAAKqB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAfN,E,+CAiBlB,WACIE,KAAKC,SAAS,CACVP,aAAcM,KAAKP,MAAMC,gB,0BAGjC,SAAaQ,GACTF,KAAKH,cACLG,KAAK7C,MAAMmB,YAAY0B,KAAK7C,MAAMoB,WAAY2B,EAAOC,OAAQD,EAAOzB,OAAQyB,EAAO1B,Q,oBAKvF,WAAS,IAlCKY,EAkCN,OAEJ,OACI,eAAC,IAAMgB,SAAP,WACC,eAACC,EAAA,EAAD,CAASC,SAAO,EAACC,QAASP,KAAKH,YAA/B,UACG,mBAAG1D,UAAY,uBADlB,yBAML,eAACqE,EAAA,EAAD,CAAOC,OAAQT,KAAKP,MAAMC,YAAagB,OAAQV,KAAKH,YAApD,UACI,cAACc,EAAA,EAAD,CAAaD,OAAQV,KAAKH,YAA1B,8BACA,cAACe,EAAA,EAAD,UACI,eAAC,YAAD,CAAWC,SAAU,SAAAX,GAAM,OAAI,EAAKH,aAAaG,IAAjD,UACI,sBAAK/D,UAAY,aAAjB,UACI,uBAAO2E,QAAU,UAAjB,oBACA,eAAC,UAAQC,OAAT,CAAgBC,MAAO,UAAUvE,GAAG,SAASM,KAAK,SAASZ,UAAU,eAArE,UACI,uCACA,uCACA,uCACA,uCACA,6CAGR,sBAAKA,UAAY,aAAjB,UACA,uBAAO2E,QAAQ,SAAf,uBACI,cAAC,UAAQG,KAAT,CACCD,MAAQ,UAAUvE,GAAK,SAASM,KAAO,SAASZ,UAAU,eAAe+E,YAAY,YACtFC,WAAc,CACV5B,WACA6B,WAhEVhC,EAgEgC,EAhEzB,SAAAC,GAAG,OAAIA,GAAQA,EAAIC,QAAUF,IAiE1BD,UAAWA,EAAU,OAGzB,cAAC,SAAD,CACAhD,UAAU,cACV6E,MAAO,UACPK,KAAO,UACPC,UAAY,MACZC,SAAW,CACPhC,SAAU,WACV6B,UAAW,gCACXjC,UAAW,sCAInB,sBAAKhD,UAAU,aAAf,UACI,uBAAO2E,QAAQ,OAAf,qBACA,cAAC,UAAQU,SAAT,CACOR,MAAQ,QAAQvE,GAAG,OAAOM,KAAK,OAAOZ,UAAU,eAAe+E,YAAa,UAAUO,KAAK,SAGtG,cAACpB,EAAA,EAAD,CAAQqB,KAAO,SAASC,MAAM,UAA9B,oC,GAnFMC,aAyJXC,MAvDf,SAAsB1E,GAClB,OAAGA,EAAMI,UAED,qBAAKpB,UAAU,YAAf,SACI,qBAAKA,UAAY,MAAjB,SACI,cAAC,EAAD,QAKbgB,EAAMK,QAED,qBAAKrB,UAAY,YAAjB,SACI,qBAAKA,UAAY,MAAjB,SACI,qBAAKA,UAAY,MAAjB,SACI,6BAAKgB,EAAMK,gBAM3BL,EAAMb,SAEF,sBAAKH,UAAU,YAAf,UACK,qBAAKA,UAAU,MAAf,SACO,sBAAKA,UAAU,MAAf,UACA,eAACsB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAMlB,GAAG,aAAT,yBAEA,cAACkB,EAAA,EAAD,CAAgBC,QAAM,EAAtB,SACCR,EAAMb,SAASS,UAGhB,6BAAKI,EAAMb,SAASS,OACpB,4BAGZ,sBAAKZ,UAAU,MAAf,UACI,cAACyB,EAAD,CAAgBtB,SAAUa,EAAMb,WAEhC,cAAC8B,EAAD,CACIC,SAAUlB,EAAMkB,SAChBC,YAAanB,EAAMmB,YACnBC,WAAYpB,EAAMb,SAASG,WAOxC,yB,mGC3FIqF,E,kDA3HX,WAAY3E,GAAO,IAAD,8BACd,cAAMA,IAEDsC,MAAQ,CACTsC,WAAW,EACXrC,aAAa,GAIjB,EAAKsC,UAAY,EAAKA,UAAUlC,KAAf,gBACjB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKmC,YAAc,EAAKA,YAAYnC,KAAjB,gBAXL,E,6CAelB,WACIE,KAAKC,SAAS,CACV8B,WAAY/B,KAAKP,MAAMsC,c,yBAI9B,WACG/B,KAAKC,SAAS,CACVP,aAAcM,KAAKP,MAAMC,gB,yBAIjC,SAAYwC,GACRC,MAAM,aAAD,OAAcnC,KAAKoC,SAASC,MAA5B,sBAA+CrC,KAAKsC,SAASD,MAA7D,sBAAgFrC,KAAKuC,SAASF,QACnGrC,KAAKH,cACLqC,EAAMM,mB,oBAEV,WAAU,IAAD,OACL,OACA,eAAC,IAAMpC,SAAP,WACI,cAACqC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,qBAAKvG,UAAY,YAAjB,SACI,qBAAKA,UAAY,MAAjB,SACI,sBAAKA,UAAW,MAAhB,UACG,wCACA,+DAUX,cAACwG,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAAMC,OAAS,KAAnC,SACI,sBAAK3G,UAAU,YAAf,UACI,cAAC4G,EAAA,EAAD,CAAc5G,UAAW,UAAS6G,KAAK,IAAvC,SAA2C,qBAAKpG,IAAI,0BACpDqG,OAAQ,KAAKtG,MAAQ,KAAKG,IAAI,kBAI9B,cAACoG,EAAA,EAAD,CAAe3C,QAASP,KAAKgC,YAC7B,eAACmB,EAAA,EAAD,CAAU1C,OAAQT,KAAKP,MAAMsC,UAAWqB,QAAM,EAA9C,UACI,eAACC,EAAA,EAAD,CAAKD,QAAM,EAAX,UACI,cAACE,EAAA,EAAD,UACI,eAAC,IAAD,CAASnH,UAAY,WAAWK,GAAG,QAAnC,UACI,mBAAGL,UAAU,qBADjB,aAIJ,cAACmH,EAAA,EAAD,UACI,eAAC,IAAD,CAASnH,UAAY,WAAWK,GAAG,aAAnC,UACI,mBAAGL,UAAU,qBADjB,kBAIJ,cAACmH,EAAA,EAAD,UACI,eAAC,IAAD,CAASnH,UAAY,WAAWK,GAAG,WAAnC,UACI,mBAAGL,UAAU,qBADjB,cAIJ,cAACmH,EAAA,EAAD,UACI,eAAC,IAAD,CAASnH,UAAY,WAAWK,GAAG,aAAnC,UACI,mBAAGL,UAAU,6BADjB,sBAKH,sBAAMA,UAAW,sBAAjB,SACI,eAACkE,EAAA,EAAD,CAAQC,SAAO,EAACC,QAASP,KAAKH,YAA9B,UACI,mBAAG1D,UAAY,wBADnB,sBAUrB,eAACqE,EAAA,EAAD,CAAOC,OAAQT,KAAKP,MAAMC,YAAagB,OAAQV,KAAKH,YAApD,UACI,cAACc,EAAA,EAAD,CAAaD,OAAQV,KAAKH,YAA1B,mBACA,cAACe,EAAA,EAAD,UACI,eAAC2C,EAAA,EAAD,CAAM1C,SAAUb,KAAKiC,YAArB,UACI,eAACuB,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAOC,QAAU,WAAjB,sBACD,cAACC,EAAA,EAAD,CAAOjC,KAAO,OAAOjF,GAAK,WAAWM,KAAO,WAC5C6G,SAAU,SAAAC,GAAK,OAAI,EAAKzB,SAAWyB,QAEnC,eAACL,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAO3C,QAAQ,WAAf,sBACI,cAAC6C,EAAA,EAAD,CAAOjC,KAAK,WAAWjF,GAAG,WAAWM,KAAK,WAC1C6G,SAAU,SAAAC,GAAK,OAAI,EAAKvB,SAAWuB,QAGvC,cAACL,EAAA,EAAD,CAAWM,OAAK,EAAhB,SACA,eAACL,EAAA,EAAD,CAAOM,OAAK,EAAZ,UACQ,cAACJ,EAAA,EAAD,CAAOjC,KAAK,WAAW3E,KAAK,WACxB6G,SAAU,SAAAC,GAAK,OAAI,EAAKtB,SAAWsB,KAF/C,mBAMA,cAACxD,EAAA,EAAD,CAAQqB,KAAK,SAASW,MAAM,SAASV,MAAM,UAA3C,kC,GApHPC,aCiCNoC,MA/Bf,SAAgB7G,GACZ,OACI,wBAAQhB,UAAY,cAApB,SACE,qBAAKA,UAAU,YAAf,SACM,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,uCACA,qBAAIA,UAAU,gBAAd,UACI,6BAAI,cAAC,IAAD,CAAMK,GAAK,QAAX,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAK,aAAX,yBACJ,+BAAI,cAAC,IAAD,CAAMA,GAAK,WAAX,oBAAJ,OACA,mCAAK,cAAC,IAAD,CAAMA,GAAK,aAAX,8BAGb,sBAAKL,UAAU,6BAAf,UACI,wCACA,mBAAGA,UAAU,oCAAoC6G,KAAK,wBAAtD,SAA8E,mBAAG7G,UAAU,sBAAyB,IACpH,mBAAGA,UAAU,mCAAmC6G,KAAK,2BAArD,SAAgF,mBAAG7G,UAAU,qBAAwB,IACrH,mBAAGA,UAAU,kCAAkC6G,KAAK,sBAApD,SAA0E,mBAAG7G,UAAU,oBAAuB,IAC9G,mBAAGA,UAAU,iCAAiC6G,KAAK,sBAAnD,SAAyE,mBAAG7G,UAAU,uBAE1F,sBAAKA,UAAU,uBAAf,UACI,oBAAG8H,KAAK,SAAS9H,UAAU,eAAe6G,KAAK,mBAA/C,UAAkE,mBAAG7G,UAAU,gBAA/E,qBAAkH,uBAClH,oBAAG8H,KAAK,SAAS9H,UAAU,eAAe6G,KAAK,4BAA/C,UAA2E,mBAAG7G,UAAU,qBAAxF,qCCtBxB,SAAS+H,EAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,KAAM5G,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAClC,OAAGD,EACQ,cAAC,EAAD,IAERC,EACQ,6BAAKA,IAGZ,cAAC,gBAAD,CACIK,IAAE,EAACC,eAAkB,CACjBC,cAAe,8BAFvB,SAII,eAACxB,EAAA,EAAD,WAEI,cAACG,EAAA,EAAD,CAASE,IAAKR,EAAU+H,EAAKtH,MAAOC,IAAKqH,EAAKpH,OAC9C,eAACkB,EAAA,EAAD,WACI,cAAChB,EAAA,EAAD,UAAYkH,EAAKpH,OACjB,cAACmB,EAAA,EAAD,UAAWiG,EAAKhG,sBAqCrBiG,MA5Bf,SAAcjH,GACV,OACC,qBAAKhB,UAAU,YAAf,SACK,sBAAKA,UAAY,MAAjB,UACI,qBAAKA,UAAU,aAAf,SACE,cAAC+H,EAAD,CACAC,KAAMhH,EAAMb,SACZiB,UAAaJ,EAAMkH,iBAClB7G,QAAWL,EAAMmH,qBAGpB,qBAAKnI,UAAU,aAAf,SACA,cAAC+H,EAAD,CACEC,KAAMhH,EAAMoH,UACZhH,UAAWJ,EAAMqH,iBACjBhH,QAAWL,EAAMsH,qBAKnB,qBAAKtI,UAAU,aAAf,SACA,cAAC+H,EAAD,CAAYC,KAAMhH,EAAMuH,kB,oBCpChCnF,GAAW,SAAAF,GAAG,OAAIA,GAAOA,EAAIC,QAM7BH,GAAY,SAAAC,GAAG,OAAI,SAAAC,GAAG,OAAKA,GAAQA,EAAIC,QAAUF,IAGjDgC,GAAY,SAAAhC,GAAG,OAAI,SAAAC,GAAG,OAAIA,GAAQA,EAAIC,QAAUF,IAEhDuF,GAAW,SAAAtF,GAAG,OAAKuF,OAAOvF,IAE1BwF,GAAa,SAAAxF,GAAG,MAAI,4CAA4CyF,KAAKzF,IAiV5D0F,G,kDA7UX,WAAY5H,GAAO,IAAD,8BACd,cAAMA,IAEDsC,MAAQ,CACTuF,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,OAAO,EACPC,YAAa,WACb1F,SAAU,GACVC,QAAQ,CACJoF,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,OAAO,IAIf,EAAKpF,aAAe,EAAKA,aAAaD,KAAlB,gBAnBN,E,gDAgFlB,SAAaI,GACToF,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUvF,IAClDiC,MAAM,qBAAuBqD,KAAKC,UAAUvF,IAC5CF,KAAK7C,MAAMuI,sB,oBAKf,WAAS,IAAD,OAGJ,OACI,sBAAKvJ,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,MAAf,UACA,eAACsB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAMlB,GAAG,QAAT,oBAEA,cAACkB,EAAA,EAAD,CAAgBC,QAAM,EAAtB,2BAIA,4CACA,4BAIR,sBAAKxB,UAAU,qCAAf,UACI,sBAAKA,UAAU,WAAf,UACI,6CACA,mDACgB,uBADhB,oBAEqB,uBAFrB,eAMJ,sBAAKA,UAAU,MAAf,UACI,oBAAG8H,KAAK,SAAS9H,UAAU,eAAe6G,KAAK,mBAA/C,UAAkE,mBAAG7G,UAAU,gBAA/E,qBAAkH,uBAClH,oBAAG8H,KAAK,SAAS9H,UAAU,eAAe6G,KAAK,gCAA/C,UAA+E,mBAAG7G,UAAU,qBAA5F,gCAMR,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,SAAf,UACI,uDACA,0BAGJ,qBAAKA,UAAU,YAAf,SAGI,eAAC,OAAD,CAAM6E,MAAM,eAAeH,SAAU,SAAAX,GAAM,OAAI,EAAKH,aAAaG,IAAjE,UAEI,eAAEyF,GAAA,EAAF,CAAMxJ,UAAY,aAAlB,UAEI,cAACsH,EAAA,EAAD,CAAO3C,QAAQ,YAAY8E,GAAI,EAA/B,wBACC,eAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,UAGG,cAAC,UAAQ3E,KAAT,CAAcD,MAAQ,aAAavE,GAAG,YAAYM,KAAK,YACnDmE,YAAY,aAEZ/E,UAAY,eACZgF,WAAa,CACT5B,YACA6B,UAAWA,GAAU,GACrBjC,UAAWA,GAAU,OAGzB,cAAC,SAAD,CACEhD,UAAU,cACV6E,MAAQ,aACRK,KAAO,UACPC,UAAY,MACZC,SAAY,CACRhC,SAAU,WACV6B,UAAW,gCACXjC,UAAW,yCAa7B,eAAEwG,GAAA,EAAF,CAAMxJ,UAAY,aAAlB,UACI,cAACsH,EAAA,EAAD,CAAO3C,QAAQ,WAAW8E,GAAI,EAA9B,uBACA,eAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,UAEI,cAAC,UAAQ3E,KAAT,CAAcD,MAAQ,YAAYvE,GAAG,WAAWM,KAAK,WACjDmE,YAAY,YACZ/E,UAAY,eACZgF,WAAa,CACT5B,YACA6B,UAAWA,GAAU,GACrBjC,UAAWA,GAAU,OAGvB,cAAC,SAAD,CACAhD,UAAU,cACV6E,MAAQ,YACRK,KAAO,UACPC,UAAY,MACZC,SAAY,CACRhC,SAAU,WACV6B,UAAW,gCACXjC,UAAW,yCAW1B,eAAEwG,GAAA,EAAF,CAAMxJ,UAAY,aAAlB,UACC,cAACsH,EAAA,EAAD,CAAO3C,QAAQ,WAAW8E,GAAI,EAA9B,mBACA,eAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,UAEM,cAAC,UAAQ3E,KAAT,CAAcD,MAAQ,YAAYvE,GAAG,WAAWM,KAAK,WACnDmE,YAAY,eACZ/E,UAAY,eACZgF,WAAa,CACT5B,YACA6B,UAAWA,GAAU,IACrBjC,UAAWA,GAAU,IACrBwF,eAGH,cAAC,SAAD,CACCxI,UAAU,cACV6E,MAAQ,YACRK,KAAO,UACPC,UAAY,MACZC,SAAY,CACRhC,SAAU,WACV6B,UAAW,8BACXjC,UAAW,6BACXwF,SAAU,4BAW5B,eAACgB,GAAA,EAAD,CAAKxJ,UAAY,aAAjB,UACI,cAACsH,EAAA,EAAD,CAAO3C,QAAQ,QAAQ8E,GAAI,EAA3B,mBACA,eAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,UAEI,cAAC,UAAQ3E,KAAT,CAAcD,MAAQ,SAASvE,GAAG,QAAQM,KAAK,QAC3CmE,YAAY,QACZ/E,UAAY,eACZgF,WAAa,CACT5B,YACAsF,iBAOR,cAAC,SAAD,CACM1I,UAAU,cACV6E,MAAQ,SACRK,KAAO,UACPC,UAAY,MACZC,SAAY,CACRhC,SAAU,WACVsF,WAAY,iCAO9B,eAACc,GAAA,EAAD,CAAKxJ,UAAY,aAAjB,UACI,cAAC0J,GAAA,EAAD,CAAKD,GAAI,CAACE,KAAM,EAAGC,OAAQ,GAA3B,SAEI,qBAAK5J,UAAY,aAAjB,SACI,eAACsH,EAAA,EAAD,CAAOM,OAAK,EAAZ,UAEK,cAAC,UAAQiC,SAAT,CAAkBhF,MAAM,SACrBjE,KAAK,QACLZ,UAAY,qBAJpB,IAQQ,IACJ,gEAIZ,cAAC0J,GAAA,EAAD,CAAKD,GAAI,EAAT,SAEI,eAAC,UAAQ7E,OAAT,CAAgBC,MAAQ,eAAejE,KAAK,cAGpCZ,UAAY,eAHpB,UAII,8CACA,sDAKZ,eAACwJ,GAAA,EAAD,CAAKxJ,UAAY,aAAjB,UACI,cAACsH,EAAA,EAAD,CAAO3C,QAAQ,WAAW8E,GAAI,EAA9B,2BACA,cAACC,GAAA,EAAD,CAAKD,GAAI,GAAT,SAGI,cAAC,UAAQpE,SAAT,CAAmBR,MAAQ,YAAWvE,GAAG,WAAWM,KAAK,WACrD0E,KAAK,KACLtF,UAAU,sBAOtB,cAACwJ,GAAA,EAAD,CAAKxJ,UAAY,aAAjB,SACI,cAAC0J,GAAA,EAAD,CAAKD,GAAI,CAACE,KAAM,GAAIC,OAAQ,GAA5B,SACI,cAAC1F,EAAA,EAAD,CAAQqB,KAAK,SAASC,MAAM,UAA5B,8C,GA3TZC,a,oBC7BxB,SAASqE,GAAT,GAAmC,IAAXC,EAAU,EAAVA,SAEnB,GAAGA,EACA,OACE,eAAC,IAAM9F,SAAP,WACI,cAAC+F,GAAA,EAAD,CAAOC,QAAM,EAACxJ,IAAOsJ,EAASrJ,MAAOC,IAAMoJ,EAASnJ,KAAMJ,MAAQ,QAClE,eAACwJ,GAAA,EAAD,CAAOE,MAAI,EAAClK,UAAU,YAAtB,UACC,cAACgK,GAAA,EAAD,CAAOG,SAAO,EAAd,SACIJ,EAASnJ,OAEZ,4BAAImJ,EAAS/H,iBAGf,2BAgFCoI,OAxEf,SAAepJ,GAEX,IAAM+I,EAAW/I,EAAM+I,SAAS5I,KAAI,SAAA4I,GAChC,OACI,cAACC,GAAA,EAAD,CAAOK,IAAM,KAAb,SACI,cAACP,GAAD,CAAeC,SAAWA,KADPA,EAASzJ,OAMxC,OACI,sBAAKN,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,MAAf,UACI,eAACsB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAgB,cAAC,IAAD,CAAMlB,GAAG,QAAT,oBAChB,cAACkB,EAAA,EAAD,CAAgBC,QAAM,EAAtB,yBAEJ,0CACA,4BAGR,sBAAKxB,UAAU,kBAAf,UACI,sBAAKA,UAAU,WAAf,UACI,6CACA,oeAEJ,qBAAKA,UAAU,WAAf,SACI,eAACI,EAAA,EAAD,WACI,cAACkK,GAAA,EAAD,CAAYtK,UAAU,wBAAtB,SAA8C,qDAC9C,cAAC8B,EAAA,EAAD,UACI,qBAAI9B,UAAU,MAAd,UACI,oBAAIA,UAAU,QAAd,qBACA,oBAAIA,UAAU,QAAd,8BACA,oBAAIA,UAAU,QAAd,sCACA,oBAAIA,UAAU,QAAd,iBACA,oBAAIA,UAAU,QAAd,oCACA,oBAAIA,UAAU,QAAd,kBACA,oBAAIA,UAAU,QAAd,uBACA,oBAAIA,UAAU,QAAd,0BAKhB,qBAAKA,UAAU,MAAf,SACI,cAACI,EAAA,EAAD,CAAMJ,UAAU,gBAAhB,SACI,cAAC8B,EAAA,EAAD,UACI,6BAAY9B,UAAU,aAAtB,UACI,mBAAGA,UAAU,OAAb,wHACA,yBAAQA,UAAU,oBAAlB,2BAAqD,IACjD,sBAAMuK,MAAM,eAAZ,8EAQxB,sBAAKvK,UAAU,kBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,sDAEJ,qBAAKA,UAAU,WAAf,SACI,cAACgK,GAAA,EAAD,CAAOQ,MAAI,EAAX,SACKT,a,SC1FZU,GAAc,cACdC,GAAoB,oBACpBC,GAAmB,mBACnBC,GAAgB,gBAEhBC,GAAe,eACfC,GAAkB,kBAClBC,GAAqB,qBACrBC,GAAiB,iBACjBC,GAAoB,oBCwBpB/C,GAAmB,iBAAO,CACnC3C,KAAM2F,KAGGC,GAAkB,SAAA9J,GAAO,MAAK,CACvCkE,KAAM2F,GACNE,QAAS/J,IAGAgK,GAAe,SAAAnK,GAAS,MAAK,CACtCqE,KAAM2F,GACNE,QAASlK,IA6BAoK,GAAiB,SAAAjK,GAAO,MAAK,CACtCkE,KAAM2F,GACNE,QAAS/J,IAGAkK,GAAc,SAAArJ,GAAQ,MAAK,CACpCqD,KAAM2F,GACNE,QAASlJ,IAQAC,GAAc,SAACC,EAAY4B,EAAQ1B,EAAQD,GAA7B,OAAsC,SAAAmJ,GAE7D,IAAMC,EAAa,CACfrJ,WAAYA,EACZ4B,OAAQA,EACR1B,OAAQA,EACRD,KAAMA,GAIV,OAFAoJ,EAAW1I,MAAO,IAAIF,MAAO6I,cAEtBC,MAAM1L,EAAU,WAAW,CAC9B2L,OAAQ,OACR1B,KAAMb,KAAKC,UAAUmC,GACrBI,QAAQ,CACN,eAAiB,sBAGtBpM,MAAK,SAAAqM,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAME,EAAQ,IAAIC,MAAJ,gBAAmBH,EAASI,OAA5B,aAAuCJ,EAASK,aAE9D,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAAW,MAAMA,KAEpBvM,MAAK,SAAAqM,GAAQ,OAAIA,EAASM,UAC1B3M,MAAK,SAAAqM,GAAQ,OAAIN,EAlCmB,CACnCjG,KAAM2F,GACNE,QAgCoCU,OACrCO,OAAM,SAAAL,GACH7C,QAAQC,IAAI,eAAgB4C,EAAMM,SAClCtG,MAAM,2CAA6CgG,EAAMM,cA+BhDC,GAAoB,iBAAO,CACpChH,KAAM2F,KAGGsB,GAAmB,SAAAnL,GAAO,MAAK,CACxCkE,KAAM2F,GACNE,QAAS/J,IAGAoL,GAAgB,SAAAC,GAAU,MAAK,CACxCnH,KAAM2F,GACNE,QAASsB,I,kBCrIPC,GAAqB,CACvBxK,YAAa,SAACC,EAAY4B,EAAQ1B,EAAQD,GAA7B,OAAuCF,GAAYC,EAAY4B,EAAQ1B,EAAQD,IAC5FuK,eAAgB,kBDxBgB,SAAApB,GAGhC,OAFAA,EAAStD,MAEFyD,MAAM1L,EAAU,aAClBR,MAAK,SAAAqM,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAME,EAAQ,IAAIC,MAAJ,gBAAmBH,EAASI,OAA5B,aAAuCJ,EAASK,aAE9D,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADgB,IAAIC,MAAMD,EAAMM,YAIvC7M,MAAK,SAAAqM,GAAQ,OAAIA,EAASM,UAC1B3M,MAAK,SAAAyB,GAAS,OAAIsK,EAASH,GAAanK,OACxCmL,OAAM,SAAAL,GAAK,OAAIR,EAASL,GAAgBa,EAAMM,eCKnD/C,kBAAmB,kBAAOsD,UAAQC,MAAM,iBACxCC,cAAe,kBDkBgB,SAAAvB,GAC/B,OAAOG,MAAM1L,EAAU,YAClBR,MAAK,SAAAqM,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAME,EAAQ,IAAIC,MAAJ,gBAAmBH,EAASI,OAA5B,aAAuCJ,EAASK,aAE9D,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADgB,IAAIC,MAAMD,EAAMM,YAIvC7M,MAAK,SAAAqM,GAAQ,OAAIA,EAASM,UAC1B3M,MAAK,SAAAyC,GAAQ,OAAIsJ,EAASD,GAAYrJ,OACtCmK,OAAM,SAAAL,GAAK,OAAIR,EAASF,GAAeU,EAAMM,eCnClDU,gBAAiB,kBD8FgB,SAAAxB,GAGjC,OAFAA,EAASe,MAEFZ,MAAM1L,EAAU,cAClBR,MAAK,SAAAqM,GACE,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAME,EAAQ,IAAIC,MAAJ,gBAAmBH,EAASI,OAA5B,aAAuCJ,EAASK,aAE9D,MADAH,EAAMF,SAAWA,EACXE,KAGd,SAAAA,GAEI,MADgB,IAAIC,MAAMD,EAAMM,YAIvC7M,MAAK,SAAAqM,GAAQ,OAAIA,EAASM,UAC1B3M,MAAK,SAAAiN,GAAU,OAAIlB,EAASiB,GAAcC,OAC1CL,OAAM,SAAAL,GAAK,OAAIR,EAASgB,GAAiBR,EAAMM,gBC7GlDW,G,uKAsBN,WACIpJ,KAAK7C,MAAM4L,iBACX/I,KAAK7C,MAAM+L,gBACXlJ,KAAK7C,MAAMgM,oB,oBAWX,WAAU,IAAD,OAgDL,OACI,gCACI,cAAC,EAAD,IAIG,cAAC,mBAAD,UACI,cAAC,iBAAD,CAA6CE,WAAW,OAAOC,QAAS,IAAxE,SACK,eAAC,KAAD,WAEA,cAAC,KAAD,CAAOC,KAAO,QAAQjI,UApDzB,WACb,OAMI,aALA,CAKC,EAAD,CACIhF,SAAU,EAAKa,MAAME,UAAUA,UAAUmM,QAAO,SAAAlN,GAAQ,OAAIA,EAASmN,YAAU,GAC/EpF,iBAAkB,EAAKlH,MAAME,UAAUE,UACvC+G,iBAAkB,EAAKnH,MAAME,UAAUG,QACvC+G,UAAW,EAAKpH,MAAM0L,WAAWA,WAAWW,QAAO,SAAAjF,GAAS,OAAIA,EAAUkF,YAAU,GACpFjF,iBAAkB,EAAKrH,MAAM0L,WAAWtL,UACxCkH,iBAAkB,EAAKtH,MAAM0L,WAAWrL,QACxCkH,QAAS,EAAKvH,MAAM+I,SAASsD,QAAO,SAAA9E,GAAO,OAAIA,EAAQ+E,YAAU,QAwCzD,cAAE,KAAF,CAAQC,OAAK,EAACH,KAAM,aAAaI,OAAS,kBAAM,cAAC,EAAD,CAAWtM,UAAY,EAAKF,MAAME,eAIlF,cAAC,KAAD,CAAOkM,KAAM,yBAAyBjI,UApCpC,SAAC,GAAY,IAAXsI,EAAU,EAAVA,MACrB,OACI,cAAC,EAAD,CAECtN,SAAW,EAAKa,MAAME,UAAUA,UAAUmM,QAAO,SAAAlN,GAAQ,OAAIA,EAASG,MACrEmN,EAAMC,OAAOtL,cAAY,GAC1BuL,UAAa,EAAK3M,MAAME,UAAUE,UAClCC,QAAW,EAAKL,MAAME,UAAUG,QAEhCa,SAAU,EAAKlB,MAAMkB,SAASA,SAASmL,QAAO,SAAAO,GAAO,OAAIA,EAAQxL,cAAgBqL,EAAMC,OAAOtL,cAC1FyL,gBAAiB,EAAK7M,MAAMkB,SAASb,QACrCc,YAAa,EAAKnB,MAAMmB,iBA4BhB,cAAE,KAAF,CAAUiL,KAAO,aAAaI,OAAS,kBAAM,cAAC,GAAD,CAASjE,kBAAqB,EAAKvI,MAAMuI,uBAGtF,cAAC,KAAD,CAAOgE,OAAK,EAAEH,KAAO,WAAWI,OAAU,kBAAM,cAAC,GAAD,CAAOzD,SAAY,EAAK/I,MAAM+I,cAE9E,cAAC,KAAD,CAAU1J,GAAK,cAjBAwD,KAAK7C,MAAM8M,SAASC,OA2B/C,cAAC,EAAD,W,GAtHGtI,aA6HJuI,gBAAWC,oBAhJF,SAAA3K,GACpB,MAAM,CACFpC,UAAWoC,EAAMpC,UACjBgB,SAAUoB,EAAMpB,SAChB6H,SAAUzG,EAAMyG,SAChB2C,WAAYpJ,EAAMoJ,cA2IyBC,GAAzBsB,CAA6ChB,K,8CCjK1DiB,GAAY,WAIX,IAJY5K,EAIb,uDAJqB,CAC9BlC,WAAW,EACXC,QAAS,KACTH,UAAU,IACXiN,EAAU,uCACT,OAAQA,EAAO5I,MACX,KAAK2F,GACD,oCAAU5H,GAAV,IAAgBlC,WAAU,EAAOC,QAAQ,KAAMH,UAAUiN,EAAO/C,UACpE,KAAKF,GACD,oCAAU5H,GAAV,IAAgBlC,WAAU,EAAMC,QAAQ,KAAMH,UAAW,KAC7D,KAAKgK,GACD,OAAO,6BAAI5H,GAAX,IAAiBlC,WAAW,EAAOC,QAAS8M,EAAO/C,UACvD,QACI,OAAO9H,ICdN8K,GAAW,WAAqD,IAApD9K,EAAmD,uDAA3C,CAAEjC,QAAS,KAAMa,SAAU,IAAKiM,EAAW,uCACxE,OAAQA,EAAO5I,MACX,KAAK2F,GACD,OAAO,6BAAI5H,GAAX,IAAkBjC,QAAS,KAAMa,SAAUiM,EAAO/C,UAEtD,KAAKF,GACD,OAAO,6BAAI5H,GAAX,IAAkBjC,QAAS8M,EAAO/C,UAEtC,KAAKF,GACD,IAAM0C,EAAUO,EAAO/C,QACvB,OAAO,6BAAI9H,GAAX,IAAkBpB,SAAUoB,EAAMpB,SAASmM,OAAOT,KAEtD,QACI,OAAOtK,ICfNgL,GAAW,CACpB,CACIhO,GAAI,EACJM,KAAM,uBACNF,MAAO,oCACP4M,UAAU,EACVtL,YAAa,sFAEjB,CACI1B,GAAI,EACJM,KAAM,sBACNF,MAAO,8BACP4M,UAAU,EACVtL,YAAa,uFAEjB,CACI1B,GAAI,EACJM,KAAM,iBACNF,MAAO,gCACP4M,UAAU,EACVtL,YAAa,wFAEjB,CACI1B,GAAI,EACJM,KAAM,uBACNF,MAAO,+BACP4M,UAAU,EACVtL,YAAa,8GCxBRuM,GAAW,WAA8B,IAA7BjL,EAA4B,uDAApBgL,GAAUH,EAAU,uCAGzC,OAFAA,EAAO5I,KAEAjC,GCJNkL,GAAa,WAE4C,IAF3ClL,EAE0C,uDAFlC,CAAElC,WAAW,EACRC,QAAS,KACTqL,WAAY,IAAMyB,EAAW,uCACjE,OAAQA,EAAO5I,MACX,KAAK2F,GACD,OAAO,6BAAI5H,GAAX,IAAkBlC,WAAW,EAAOC,QAAS,KAAMqL,WAAYyB,EAAO/C,UAE1E,KAAKF,GACD,OAAO,6BAAI5H,GAAX,IAAkBlC,WAAW,EAAMC,QAAS,KAAMqL,WAAY,KAElE,KAAKxB,GACD,OAAO,6BAAI5H,GAAX,IAAkBlC,WAAW,EAAOC,QAAS8M,EAAO/C,UAExD,QACI,OAAO9H,IChBNmL,GAAkB,CAC3B5F,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,OAAO,EACPC,YAAa,QACb1F,SAAU,ICMRkL,I,OCEYC,uBACVC,2BAAgB,cACZ1N,UAAWgN,GACXhM,SAAUkM,GACVrE,SAAUwE,GACV7B,WAAY8B,IACTK,sBAAY,CACXC,aAAcL,OAGtBM,2BAAgBC,KAAMC,QDgBfC,G,4JAdX,WACI,OAEI,aADA,CACC,YAAD,CAAUR,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,qBAAK1O,UAAU,MAAf,SACA,cAAC,GAAD,c,GAjBFyF,aEAlB0J,IAAS3B,OAAO,cAAC,GAAD,IAAS4B,SAASC,eAAe,SAKjD/P,K","file":"static/js/main.837e5a60.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\n\nexport const Loading = () => {\n    return (\n        <div className=\"col\">\n            <i className = \"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\n            <p>Loading...</p>\n        </div>\n    )\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle,Breadcrumb, BreadcrumbItem } from 'reactstrap';\n//for React Router Parameter (will show in url) \nimport {Link} from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n//presentation function compponent (LAYOUT)\nfunction RenderDirectoryItem({campsite}) {\n    return (\n        <Card>\n            {/* dynamic link using vanilla javasscript */}\n            {/* this will open the comments and campsiteinfo */}\n            <Link to ={`/directory/${campsite.id}`}>\n                {/* week 5 tutorial with baseUrl */}\n                <CardImg width=\"100%\" src={baseUrl + campsite.image} alt={campsite.name} />\n                <CardImgOverlay>\n                    <CardTitle>{campsite.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\n//presentation function component \nfunction Directory(props) {\n\n    const directory = props.campsites.campsites.map(campsite => {\n        return (\n            <div key={campsite.id} className=\"col-md-5 m-1\">\n                <RenderDirectoryItem campsite={campsite}/>\n            </div>\n        );\n    });\n  if(props.campsites.isLoading){\n      return(\n          <div className = \"conatiner\">\n              <div className = \"row\">\n                  <Loading />\n              </div>\n          </div>\n      );\n  }\n  if (props.campsites.errMess){\n      return (\n          <div className = \"container\">\n              <div className= \"row\">\n                  <div className = \"col\">\n                      <h4>{props.campsites.errMess}</h4>\n                  </div>\n              </div>\n          </div>\n      );\n  }\n    return (\n        <div className=\"container\">\n            <div className = \"row\">\n                <div className = \"col\">\n                <Breadcrumb>\n                    <BreadcrumbItem>\n                       <Link to=\"/home\">Home</Link>\n                     </BreadcrumbItem>\n                     <BreadcrumbItem active> \n                      Directory\n                     </BreadcrumbItem>\n                </Breadcrumb>\n                <h2>Directory</h2>\n                 <hr/>\n                </div>\n            </div>\n            <div className=\"row\">\n                {directory}\n            </div>\n        </div>\n    );\n}\n\nexport default Directory;\n","import React, { Component } from 'react';\nimport { Card, CardImg,CardBody,CardText,Breadcrumb, BreadcrumbItem ,Button,Modal,ModalHeader,ModalBody} from 'reactstrap';\n//for React Router Parameter (will show in url) \nimport {Link} from 'react-router-dom';\n import {LocalForm, Control,Errors} from 'react-redux-form';\n import {Loading} from './LoadingComponent';\n import {baseUrl} from  '../shared/baseUrl';\n import {FadeTransform, Fade, Stagger} from 'react-animation-components';\n\n\n\n\nfunction RenderCampsite({campsite}){\nreturn(\n    <div className = \"col-md-5 m1\">\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n                        \n                <Card>\n                    <CardImg top src={baseUrl + campsite.image} alt = {campsite.name}/>\n                    <CardBody>\n                        \n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                    \n\n                </Card>\n         </FadeTransform>\n    </div>\n);\n\n}\n\nfunction RenderComments({comments,postComment,campsiteId}){\n    if(comments){\n       return(\n          <div className =\"col-md-5 m-1\">\n           <h4>Comments</h4>\n           <Stagger in>\n           {comments.map((comments) => {\n              return(\n                  <Fade in key ={comments.id}>\n                     \n                    <div>\n                        <p> {comments.text}<br/> {\"--\"}\n                        {comments.author} \n                        {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comments.date)))}\n                        </p>\n                    </div>\n                  </Fade>\n              )\n           \n           \n            }\n           \n           )}\n           </Stagger>\n            <CommentForm campsiteId = {campsiteId} postComment = {postComment} />\n           </div>\n       );\n\n    }\n    return < div/>;\n}\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst required = val => val && val.length;\n\nclass CommentForm extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            isModalOpen: false,\n            author: '',\n            text: '',\n            feedback: '',\n            touched:{\n                author: false,\n                text: false,\n            }\n        }\n        //login Modal\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);    }\n     //set state of to true \n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n    handleSubmit(values){\n        this.toggleModal();\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\n        \n\n    }\n\n    render(){\n       \n        return( \n            <React.Fragment> \n             <Button  outline onClick={this.toggleModal}>\n                <i className = \"fa fa-pencil fa-lg\" /> Submit CommentForm\n            </Button>\n\n        \n        \n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\n            <ModalHeader toggle={this.toggleModal} > Submit Comment </ModalHeader>\n            <ModalBody>\n                <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                    <div className = \"form-group\">\n                        <label htmlFor = \" rating\">Rating</label>\n                        <Control.Select model =\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                        </Control.Select>\n                    </div>\n                    <div className = \"form-group\">\n                    <label htmlFor=\"author\">Your Name</label>\n                        <Control.Text \n                         model = \".author\" id = \"author\" name = \"author\" className=\"form-control\" placeholder=\"Your Name\"\n                        validators = {{\n                            required,\n                            minLength : minLength(2),\n                            maxLength: maxLength(15),\n                        }}\n                        />\n                        <Errors\n                        className=\"text-danger\"\n                        model= \".author\"\n                        show = \"touched\"\n                        component = \"div\" \n                        messages ={{ \n                            required: 'Required',\n                            minLength: \"Must be at least 2 characters\",\n                            maxLength: \"Must be 15 characters or less\",\n                        }}/>\n\n                    </div>  \n                    <div className=\"form-group\">\n                        <label htmlFor=\"text\">Comment</label>\n                        <Control.Textarea\n                               model = \".text\" id=\"text\" name=\"text\" className=\"form-control\" placeholder =\"comment\" rows=\"6\"\n                           />\n                    </div>\n                    <Button type = \"submit\" color=\"primary\"> Submit</Button>\n                </LocalForm>\n\n            </ModalBody>\n\n        </Modal>\n        </React.Fragment>\n          );\n    }\n\n\n}\n\n\n\nfunction CampsiteInfo(props) {\n    if(props.isLoading){\n        return (\n            <div className=\"container\">\n                <div className = \"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if(props.errMess){\n        return (\n            <div className = \"container\">\n                <div className = \"row\">\n                    <div className = \"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                 <div className=\"row\">\n                        <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                            <Link to=\"/directory\">Directory</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active> \n                            {props.campsite.name}\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                            <h2>{props.campsite.name}</h2>\n                            <hr />\n                        </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    {/* comments has its own array so dont need to put campsite */}\n                    <RenderComments \n                        comments={props.comments}\n                        postComment={props.postComment}\n                        campsiteId={props.campsite.id}\n                    />\n                   \n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\n\nexport default CampsiteInfo;","import React, {Component} from 'react';\nimport {Nav,Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem,Jumbotron,Button,Modal,ModalHeader,ModalBody,Form,FormGroup,Input,Label} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component{\n\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        //binding \n        //toggleNav is an eventhandler name \n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n        \n     //class method \n    toggleNav(){\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        })\n    }\n     //class method \n     toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n\n    handleLogin(event){\n        alert(`Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.value}`);\n        this.toggleModal();\n        event.preventDefault(); //to prevent the entire page from being rerendered \n    }\n    render() {\n        return(\n        <React.Fragment>\n            <Jumbotron fluid>\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <div className= \"col\">\n                           <h1>Nucamp</h1>\n                           <h2>a better way to camp</h2>\n                       \n                        </div>  \n                    </div>\n                </div>\n            </Jumbotron>\n\n\n\n\n                <Navbar dark sticky=\"top\" expand = \"md\">\n                    <div className=\"container\">\n                        <NavbarBrand  className= \"mr-auto\"href=\"/\"><img src=\"/assets/images/logo.png\" \n                        height= \"30\" width = \"30\" alt=\"NuCamp Logo\"/>\n                        </NavbarBrand>\n                        \n                        \n                        <NavbarToggler onClick={this.toggleNav}/>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className = \"nav-link\" to=\"/home\">\n                                        <i className=\"fa fa-home fa-lg\" /> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className = \"nav-link\" to=\"/directory\">\n                                        <i className=\"fa fa-list fa-lg\" /> Directory\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className = \"nav-link\" to=\"/aboutus\">\n                                        <i className=\"fa fa-info fa-lg\" /> About\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className = \"nav-link\" to=\"/contactus\">\n                                        <i className=\"fa fa-address-card fa-lg\" /> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                                 <span className =\"navbar-text ml-auto\">\n                                     <Button outline onClick={this.toggleModal}>\n                                         <i className = \"fa fa-sign-in fa-lg\" /> Login\n                                    </Button>\n\n                                 </span>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal} >Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                             <Label HtmlFor = \"username\">Username</Label>\n                            <Input type = \"text\" id = \"username\" name = \"username\"\n                            innerRef={input => this.username = input}/>\n                            </FormGroup>\n                            <FormGroup>\n                            <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                innerRef={input => this.password = input}/>\n\n                             </FormGroup>\n                            <FormGroup Check>\n                            <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={input => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n         </React.Fragment>    \n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n//Notess\n//  white spaces\n//   self closing tags on the i element \nfunction Footer(props){\n    return(\n        <footer className = \"site-footer\">\n          <div className=\"container\">\n                <div className=\"row\">             \n                    <div className=\"col-4 col-sm-2 offset-1\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to = '/home' >Home</Link></li>\n                            <li><Link to = '/directory' >Directory</Link></li>\n                            <li><Link to = '/aboutus' >About </Link> </li>\n                            <li> <Link to = '/contactus' >Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-6 col-sm-3 text-center\">\n                        <h5>Social</h5>\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\" /></a> \n                    </div>\n                    <div className=\"col-sm-4 text-center\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:notreal@notreal.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n            </div>  \n        </footer>\n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from  '../shared/baseUrl';\nimport {FadeTransform} from 'react-animation-components';\n//presentation function component\n//destructer item name from props in the parameter list\nfunction RenderCard({item, isLoading, errMess}) {\n    if(isLoading){\n        return <Loading />;\n    }\n    if(errMess){\n        return <h4>{errMess}</h4>\n    }\n    return (\n        <FadeTransform \n            in transformProps = {{\n                exitTransform: 'scale(0.5) translateY(50%)'\n            }}>\n            <Card>\n                {/* week 5 tutorial with the baseUrl */}\n                <CardImg src={baseUrl + item.image} alt={item.name} />\n                <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n          </FadeTransform>\n    );\n}\n\n//presentation function component\n//how you want it to be displayed \nfunction Home(props){\n    return(\n     <div className=\"container\">\n          <div className = \"row\">\n              <div className=\"col-md m-1\">\n                <RenderCard \n                item={props.campsite} \n                isLoading = {props.campsitesLoading}\n                 errMess = {props.campsitesErrMess}\n                 />\n              </div>\n              <div className=\"col-md m-1\">\n              <RenderCard \n                item={props.promotion}\n                isLoading={props.promotionLoading}\n                errMess = {props.promotionErrMess}\n              \n              />\n\n              </div>\n              <div className=\"col-md m-1\">\n              <RenderCard item={props.partner} />\n              </div>\n          </div>\n     </div>\n    );\n}\n\nexport default Home;","import React from 'react';\n// import {Breadcrumb, BreadcrumbItem,Button,Form,Label,Input,Col,FormFeedback } from 'reactstrap';\n\n//for Redux \nimport { Breadcrumb, BreadcrumbItem,\n    Button, Label, Col, Row } from 'reactstrap';\n//for React Router Parameter (will show in url) \nimport {Link} from 'react-router-dom';\nimport { Component } from 'react';\n// import {Control,LocalForm} from 'react-redux-form';\nimport {Control,Form,Errors} from 'react-redux-form';\n//------------------------------------------------------------------------------\n//react-rodux-form \n//this is for validation \n//required recieves a value as an argument and its a string because all inputs are recived as strings \n//it will check if val is falsy and make sure the length is greater than zero. \n//if it returns true if the function has something in it and false if it doesnt. id it doesnt \n//the function fails \nconst required = val => val && val.length;\n\n//2 arrow functions in one \n//the first arrow function takes the maximum length and the second takes the value (input string)\n//returns true if the maximum input has not been exceeded !val will return true\n//this function will fell if theres no input (val) or the input is too long\nconst maxLength = len => val => !val || (val.length <= len);\n\n//it has failed the test for min length , if the input is too short\nconst minLength = len => val => val && (val.length >= len);\n//if the input is not not a number \nconst isNumber = val => !isNaN(+val);\n//this  .test will test if it matchest the redux pattern\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n//------------------------------------------------------------------------------\n\n class Contact extends  Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false, //for the person submitting this form agrees to be contacted or not \n            contactType: 'By Phone',\n            feedback: '',\n            touched:{\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n        // this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n//------------------------------------------------------------------------------\n\n    //without Redux\n    // validate(firstName, lastName, phoneNum,email){\n\n    //     const errors = {\n    //         firstName: '',\n    //         lastName: '',\n    //         phoneNum: '',\n    //         email: ''\n    //     };\n\n    //     if(this.state.touched.firstName){\n    //         if(firstName.length < 2){\n    //             errors.firstName = 'First name must be at least 2 characters.';\n    //         }else if (firstName.length > 15)\n    //             errors.firstName = 'First name must be 15 or less characters.';\n    //     }\n    //     if(this.state.touched.lastName){\n    //         if(lastName.length < 2){\n    //             errors.lastName = 'last name must be at least 2 characters.';\n    //         }else if (lastName.length > 15)\n    //             errors.lastName = 'last name must be 15 or less characters.';\n    //     }\n\n    //     const reg = /^\\d+$/;\n    //     if (this.state.touched.phoneNum && !reg.test(phoneNum)) {\n    //         errors.phoneNum = 'The phone number should contain only numbers.';\n    //     }\n    //     if (this.state.touched.email && !email.includes('@')) {\n    //         errors.email = 'Email should contain a @';\n    //     }\n    //     return errors;\n    // }\n//------------------------------------------------------------------------------\n\n      //dont need to bind this handler because its an arrow function \n    //  handleBlur = (field =>  () =>{\n    //     this.setState({\n    //        touched: {...this.state.touched, [field]: true}\n    //     });\n    //  } )\n    \n    // handleInputChange(event){\n    //     const target = event.target;\n    //     const name = target.name;\n    //     const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    //     this.setState({\n    //        [name]: value\n    //     })\n    // }\n\n    // handleSubmit(event){\n    //     console.log(\"Current state is: \" + JSON.stringify(this.state));\n    //     alert(\"Current state is: \" + JSON.stringify(this.state));\n    //     event.preventDefault();\n    // }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n    \n//------------------------------------------------------------------------------\n\n    render(){\n         //without redux form \n        // const errors = this.validate(this.state.firstName,this.state.lastName,this.state.phoneNum,this.state.email)\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                        <Link to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active> \n                        Contact Us\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n\n                \n                \n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n    {/* ------------------------------------------------------------------------------------------------------------------------------- */}\n                    <div className=\"col-md-10\">\n                        {/* without redux from  */}\n                        {/* <Form onSubmit={this.handleSubmit}> */}\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            {/* <FormGroup row> */}\n                            < Row className = \"form-group\" >\n                                {/* md =  equivalent to col-md-10  */}\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                 <Col md={10}>  \n                                 {/* equivalent to col-md-10  */}\n                                    {/* <Input type=\"text\" id=\"firstName\" name=\"firstName\" */}\n                                    <Control.Text model = \".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        //line 158 for redux \n                                        className = \"form-control\"\n                                        validators ={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }} \n                                    />\n                                        <Errors\n                                          className=\"text-danger\"\n                                          model = \".firstName\"\n                                          show = \"touched\"\n                                          component = \"div\"\n                                          messages = {{\n                                              required: 'Required',\n                                              minLength: 'Must be at least 2 characters',\n                                              maxLength: 'Must be 15 characters or Less'\n\n                                          }}\n                                        //before redux form \n                                        // value={this.state.firstName}\n                                        // invalid = {errors.firstName}\n                                        // onBlur={this.handleBlur(\"firstName\")}\n                                        // onChange={this.handleInputChange} \n                                        />\n                                        {/* <FormFeedback>{errors.firstName}</FormFeedback> */}\n                                </Col>\n                            </Row>\n                            {/* </FormGroup> */}\n                            < Row className = \"form-group\" >\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    {/* <Input type=\"text\" id=\"lastName\" name=\"lastName\" */}\n                                    <Control.Text model = \".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className = \"form-control\"\n                                        validators ={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                          <Errors\n                                          className=\"text-danger\"\n                                          model = \".lastName\"\n                                          show = \"touched\"\n                                          component = \"div\"\n                                          messages = {{\n                                              required: 'Required',\n                                              minLength: 'Must be at least 2 characters',\n                                              maxLength: 'Must be 15 characters or Less'\n\n                                          }}\n                                        // value={this.state.lastName}\n                                        // invalid={errors.lastName}\n                                        // onBlur={this.handleBlur(\"lastName\")}\n                                        // onChange={this.handleInputChange} \n                                    />\n                                        {/* <FormFeedback>{errors.lastName}</FormFeedback> */}\n                                </Col>                        \n                            </Row>\n                               < Row className = \"form-group\" >\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    {/* <Input type=\"tel\" id=\"phoneNum\" name=\"phoneNum\" */}\n                                      <Control.Text model = \".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className = \"form-control\"\n                                        validators ={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                     />\n                                         <Errors\n                                          className=\"text-danger\"\n                                          model = \".phoneNum\"\n                                          show = \"touched\"\n                                          component = \"div\"\n                                          messages = {{\n                                              required: 'Required',\n                                              minLength: 'Must be at least 10 numbers',\n                                              maxLength: 'Must be 15 numbers or Less',\n                                              isNumber: 'Must be a number'\n\n                                          }}\n                                        // value={this.state.phoneNum}\n                                        // invalid={errors.phoneNum}\n                                        // onBlur={this.handleBlur(\"phoneNum\")}\n                                        // onChange={this.handleInputChange} \n                                     />\n                                    {/* <FormFeedback>{errors.phoneNum}</FormFeedback> */}\n                                </Col>\n                            </Row>\n                            <Row className = \"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    {/* <Input type=\"email\" id=\"email\" name=\"email\" */}\n                                    <Control.Text model = \".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className = \"form-control\"\n                                        validators ={{\n                                            required,\n                                            validEmail\n                                        }}\n                                        // value={this.state.email}\n                                        // invalid={errors.email}\n                                        // onBlur={this.handleBlur(\"email\")}\n                                        // onChange={this.handleInputChange} \n                                    />\n                                    <Errors\n                                          className=\"text-danger\"\n                                          model = \".email\"\n                                          show = \"touched\"\n                                          component = \"div\"\n                                          messages = {{\n                                              required: 'Required',\n                                              validEmail: 'Invalid email address'\n\n                                          }}\n                                    />\n                                     {/* <FormFeedback>{errors.email}</FormFeedback> */}\n                                </Col>\n                            </Row>\n                            <Row className = \"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    {/* <FormGroup check> */}\n                                    <div className = \"form-check\">\n                                        <Label check>\n                                            {/* <Input type=\"checkbox\" */}\n                                             <Control.Checkbox model=\".agree\"\n                                                name=\"agree\"\n                                                className = \"form-check-input\"\n                                                //instead of value you use checked \n                                                // checked={this.state.agree}\n                                                // onChange={this.handleInputChange} \n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    {/* <Input type=\"select\" name=\"contactType\" */}\n                                    <Control.Select model = \".contactType\" name=\"contactType\"\n                                            // value={this.state.contactType}\n                                            // onChange={this.handleInputChange}\n                                            className = \"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    {/* </Input> */}\n                                    </Control.Select>\n                                </Col>\n                            </Row>\n                            <Row className = \"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    {/* <Input type=\"textarea\" id=\"feedback\" name=\"feedback\" */}\n                                    {/* control.textarea is a self closing tag  */}\n                                    <Control.Textarea  model = \".feedback\"id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                        // value={this.state.feedback}\n                                        // onChange={this.handleInputChange}\n                                    />\n      \n                                </Col>\n                            </Row>\n                            <Row className = \"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        {/* </Form> */}\n                        </Form>\n                    </div>\n    {/* ------------------------------------------------------------------------------------------------------------------------------- */}\n            \n                </div>\n            </div>\n\n\n           \n        );\n        }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n//import { PARTNERS } from '../shared/partners';\n\nfunction RenderPartner({partners}){\n     //if statement checks to make sure the partner argument (which itself will be an object) contains a truthy value. \n     if(partners){\n        return(\n          <React.Fragment>\n              <Media object src = {partners.image} alt= {partners.name} width = \"150\"/>\n              <Media body className=\"ml-5 mb-4\">\n               <Media heading >\n                  {partners.name}\n               </Media>\n                <p>{partners.description}</p>\n                \n              </Media>\n              <div />\n\n          </React.Fragment>\n        );\n     }\n\n}\n\nfunction About(props) {\n\n    const partners = props.partners.map(partners => {\n        return (\n            <Media tag = \"li\" key={partners.id} >\n                <RenderPartner partners ={partners}/>\n            </Media>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About Us</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-sm-6\">\n                    <h3>Our Mission</h3>\n                    <p>We present a curated database of the best campsites in the vast woods and backcountry of the World Wide Web Wilderness. We increase access to adventure for the public while promoting safe and respectful use of resources. The expert wilderness trekkers on our staff personally verify each campsite to make sure that they are up to our standards. We also present a platform for campers to share reviews on campsites they have visited with each other.</p>\n                </div>\n                <div className=\"col-sm-6\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\"><h3>Facts At a Glance</h3></CardHeader>\n                        <CardBody>\n                            <dl className=\"row\">\n                                <dt className=\"col-6\">Founded</dt>\n                                <dd className=\"col-6\">February 3, 2016</dd>\n                                <dt className=\"col-6\">No. of Campsites in 2019</dt>\n                                <dd className=\"col-6\">563</dd>\n                                <dt className=\"col-6\">No. of Reviews in 2019</dt>\n                                <dd className=\"col-6\">4388</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">42</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col\">\n                    <Card className=\"bg-light mt-3\">\n                        <CardBody>\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">I will not follow where the path may lead, but I will go where there is no path, and I will leave a trail.</p>\n                                <footer className=\"blockquote-footer\">Muriel Strode,{' '}\n                                    <cite title=\"Source Title\">\"Wind-Wafted Wild Flowers\" -\n                                    The Open Court, 1903</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Community Partners</h3>\n                </div>\n                <div className=\"col mt-4\">\n                    <Media list>\n                        {partners}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const CAMPSITES_LOADING = 'CAMPSITES_LOADING';\nexport const CAMPSITES_FAILED = 'CAMPSITES_FAILED';\nexport const ADD_CAMPSITES = 'ADD_CAMPSITES';\n\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOTIONS_LOADING = 'PROMOTIONS_LOADING';\nexport const ADD_PROMOTIONS = 'ADD_PROMOTIONS';\nexport const PROMOTIONS_FAILED = 'PROMOTIONS_FAILED';\n","//* is a wild card\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n\n\nexport const fetchCampsites = () => dispatch => {\n    dispatch(campsitesLoading());\n\n    return fetch(baseUrl + 'campsites')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(campsites => dispatch(addCampsites(campsites)))\n        .catch(error => dispatch(campsitesFailed(error.message)));\n};\n\n\n\n\nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n});\n\nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n});\n\nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n});\n\n\n\n\n\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment =>({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n}) ;\n\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n\n    const newComment = {\n        campsiteId: campsiteId,\n        rating: rating,\n        author: author,\n        text: text\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments',{\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers:{\n          \"Content-Type\" : \"application/json\"\n        }\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } else {\n            const error = new Error(`Error ${response.status}: ${response.statusText}`);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => { throw error; }\n)\n.then(response => response.json())\n.then(response => dispatch(addComment(response)))\n.catch(error =>{\n    console.log('post comment', error.message);\n    alert('Your comment could not be posted\\nError:' + error.message);\n})\n      \n};\n\n\n\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});\n\n\n\n\n\n","import React, { Component } from 'react';\n//components\nimport Directory from './DirectoryComponent';\nimport CampsiteInfo from './CampsiteInfoComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\n\nimport { TransitionGroup,CSSTransition } from 'react-transition-group';\n\n//for redux stuff\nimport { postComment, fetchCampsites, fetchComments, fetchPromotions } from '../redux/ActionCreators';\n//Routers \nimport {Switch,Route, Redirect,withRouter} from 'react-router-dom';\n//we are transfering all the application data to react-redux store\nimport { connect } from 'react-redux';\nimport {actions} from 'react-redux-form';\n\nconst mapStateToProps = state => {\n    return{\n        campsites: state.campsites,\n        comments: state.comments,\n        partners: state.partners,\n        promotions: state.promotions \n    }\n}\n//week 4 and week 5 tutorials \nconst mapDispatchToProps = {\n    postComment: (campsiteId, rating, author, text) => (postComment(campsiteId, rating, author, text)),\n    fetchCampsites: () => (fetchCampsites()),\n    resetFeedbackForm: () => (actions.reset('feedbackForm')),\n    fetchComments: () => (fetchComments()),\n    fetchPromotions: () => (fetchPromotions())\n};\n\n\n//class component with a class inheritance \"extends\". Component is the parent class provided by the React library \nclass Main extends Component {\n//----------------------------------------------------------------------------------------------------------------------\n    //inside the class body is a constructor method which is required in two classes when you are storing local state inside the App component,\n    //and you wish to bind methods\n    //when a constructor method is used, it must take props as an argument. Props is short for properties\n    //The first line must be super(props), so that the props are communicated to the base constructor in the parent component. \n    //if using state, this.state must be set equal to an object \n//     constructor(props){\n//         //props is an object of data, passed from my parent component\n//         //props is read only information \n//         super(props);\n//         //this holds the campsite.js data and is being passed down to directory compnent which is the child \n//         this.state = {\n//             campsites : CAMPSITES\n//             comments : COMMENTS,\n//             partners : PARTNERS,\n//             promotions : PROMOTIONS\n//         };\n// //----------------------------------------------------------------------------------------------------------------------\n\n//     }\n// week 4 and week 5 tutorials \ncomponentDidMount() {\n    this.props.fetchCampsites();\n    this.props.fetchComments();\n    this.props.fetchPromotions();\n}\n    \n\n\n\n    //render is a required function in class-based components\n    //render functions return JSX structure (XML )\n    // doesnt display the actual content but shows what the conetent will have and how it will arrange.\n    //its a blue print \n    //cant have two returns \n    render() {\n        \n        //this homepage component is written with an arrow function instead of a function declaration \n        // because of a featured of arrow functions\n        //ARROW FUNCTIONS INHERIT THE THIS OF THEIR PARENT SCOPE  \n        //we need to use the arrow function so we can get easilt get the data from the main component state\n        const HomePage = () => {\n            return (\n                // passing three props one we would like to feature on the homepage\n                //any array or objects with the feature property set to true will return a new array\n                //should only return one object from each array  \n                // array index 0 will pull that object\n                //passing to the home component as props \n                <Home\n                    campsite={this.props.campsites.campsites.filter(campsite => campsite.featured)[0]}\n                    campsitesLoading={this.props.campsites.isLoading}\n                    campsitesErrMess={this.props.campsites.errMess}\n                    promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]}\n                    promotionLoading={this.props.promotions.isLoading}\n                    promotionErrMess={this.props.promotions.errMess}\n                    partner={this.props.partners.filter(partner => partner.featured)[0]}\n                />\n\n                       \n            );\n        };\n       //-----------------------------------------------------------------------------\n        // + converts a string to a number \n       const CampsiteWithId = ({match}) =>{\n           return(\n               <CampsiteInfo \n               // array index 0 will pull that object\n                campsite ={this.props.campsites.campsites.filter(campsite => campsite.id === \n                +match.params.campsiteId)[0]}\n                isLaoding = {this.props.campsites.isLoading}\n                errMess = {this.props.campsites.errMess}\n                //wont use index 0 because I want the whole array \n                comments={this.props.comments.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n\n                \n                />\n           );\n       }\n\n       //-----------------------------------------------------------------------------\n\n        return (\n            <div>\n                <Header />\n                \n                \n                {/*------------------------------------------------------------------------------  */}\n                   <TransitionGroup> \n                       <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}> \n                            <Switch>\n                            \n                            <Route path = '/home' component={HomePage} />\n                        {/* use this render syntax to pass data  */}\n                            < Route exact path= '/directory' render ={() => <Directory campsites ={this.props.campsites} /> } />\n                            \n                            {/*the colon means what follows this forward slash is a paramter of a property Id*/}\n                            {/* The Route component would be able to use the back and forth buttons on the browser  */}\n                            <Route path= '/directory/:campsiteId' component ={CampsiteWithId}/>\n                        \n                        {/* use this syntax when not passing data */}\n                            < Route   path = '/contactus' render ={() => <Contact resetFeedbackForm = {this.props.resetFeedbackForm}/>} />\n                            \n                            {/* use this render syntax to pass data  */}\n                            <Route exact  path = '/aboutus' render = {() => <About partners = {this.props.partners} /> } />\n                            \n                            <Redirect to = '/home' /> \n\n                            \n                            </Switch>\n                            </CSSTransition>\n                    </TransitionGroup>\n                 {/*------------------------------------------------------------------------------  */}\n                \n               \n               \n                <Footer />\n            </div>\n        );\n    };\n}\n//takes the state form the redux store\n//use router so that the react router will still be able to function \nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n//reducer\n\nexport const Campsites = (state = {\n    isLoading: true,\n    errMess: null,\n    campsites:[]\n}, action) =>{\n    switch (action.type){\n        case ActionTypes.ADD_CAMPSITES:\n            return{...state,isLoading:false, errMess:null, campsites:action.payload};\n        case ActionTypes.CAMPSITES_LOADING:\n            return{...state,isLoading:true, errMess:null, campsites: []};\n        case ActionTypes.CAMPSITES_FAILED:\n            return {...state,isLoading: false, errMess: action.payload};\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n\n        case ActionTypes.ADD_COMMENT:\n            const comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n};","export const PARTNERS = [\r\n    {\r\n        id: 0,\r\n        name: \"Bootstrap Outfitters\",\r\n        image: \"/assets/images/bootstrap-logo.png\",\r\n        featured: false,\r\n        description: \"Bootstrap Outfitters supplies you with the gear you need at prices you can't beat.\"\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Git Out Expeditions\",\r\n        image: \"/assets/images/git-logo.png\",\r\n        featured: false,\r\n        description: \"Join Git Out Expeditions to explore new horizons with a group of other adventurers!\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Mongo Fly Shop\",\r\n        image: \"/assets/images/mongo-logo.png\",\r\n        featured: false,\r\n        description: \"Need a new fishing pole, a tacklebox, or flies of all kinds? Stop by Mongo Fly Shop.\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Node Outdoor Apparel\",\r\n        image: \"/assets/images/node-logo.png\",\r\n        featured: true,\r\n        description: \"From polar fleeces to swimsuits, hiking boots to waders, a visit to Node will be sure to get you covered.\"\r\n    }\r\n]","import {PARTNERS} from '../shared/partners';\n//reducer\n\nexport const Partners = (state = PARTNERS, action) =>{\n    switch (action.type){\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = { isLoading: true,\n                                        errMess: null,\n                                        promotions: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOTIONS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOTIONS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOTIONS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n            \n        default:\n            return state;\n      }\n};\n","export const InitialFeedback = {\n    firstName: '',\n    lastName: '',\n    phoneNum: '',\n    email: '',\n    agree: false,\n    contactType: 'Phone',\n    feedback: ''\n};\n","import React, { Component } from 'react';\nimport Main from './components/mainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nimport './App.css';\n\n\n\nconst store = ConfigureStore();\n\n//class component with a class inheritance \"extends\". Component is the parent class provided by the React library \nclass App extends Component {\n//----------------------------------------------------------------------------------------------------------------------\n   \n//----------------------------------------------------------------------------------------------------------------------\n\n    \n    //render is a required function in class-based components\n    //render functions return JSX structure (XML )\n    // doesnt display the actual content but shows what the conetent will have and how it will arrange.\n    //its a blue print \n    //cant have two returns \n    render() {\n        return (\n            // this makes the redux store available to all connected components that are children of App\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div className=\"App\">\n                    <Main/>\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    };\n}\n\nexport default App;","\nimport { createStore,combineReducers,applyMiddleware} from 'redux';\nimport {createForms} from 'react-redux-form';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { Campsites } from './campsites';\nimport { Comments } from './comments';\nimport { Partners } from './partners';\nimport { Promotions } from './promotions';\nimport {InitialFeedback} from './forms';\n\n//arrow function called ConfigureStore\nexport const ConfigureStore = () => {\n    // create a variable store that will  createStore function from redux \n    //pass in Reducers and initial state\n    const store = createStore(\n        combineReducers({\n            campsites: Campsites,\n            comments: Comments,\n            partners: Partners,\n            promotions: Promotions,\n            ...createForms({\n                feedbackForm: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk,logger)\n    );\n //will return store \n    return store;\n};","//imports = injecting functionality from some other location into this title \n\nimport React from 'react'; //we can import from a node package or from a file \nimport ReactDOM from 'react-dom';\nimport './index.css'; //import entire contents of a file \nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'typeface-lobster';\nimport 'typeface-open-sans';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App  from './App';// *ALWAYS GO LAST *\n\n\n\n//This is responsible for rendering the Reacct Tree into our HTML document \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}